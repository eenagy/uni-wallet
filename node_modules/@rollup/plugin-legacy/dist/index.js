'use strict';

var path = require('path');
var pluginutils = require('@rollup/pluginutils');

var validName = /^[a-zA-Z_$][a-zA-Z$_0-9]*$/;

function legacy(options) {
  var exports = {};
  Object.keys(options).forEach(function (file) {
    exports[pluginutils.normalizePath(path.resolve(file))] = options[file];
  });

  return {
    name: 'legacy',

    transform: function transform(content, id) {
      var normalizedId = pluginutils.normalizePath(id);
      if (normalizedId in exports) {
        var code = content;
        var value = exports[normalizedId];

        if (typeof value === 'string') {
          // default export
          code += "\nexport default " + value + ";";
        } else {
          var statements = [];
          var i = 1;

          Object.entries(value).forEach(function (ref) {
            var key = ref[0];
            var name = ref[1];

            if (name === key) {
              statements.push(("export { " + key + " };"));
            } else if (validName.test(name)) {
              statements.push(("export { " + name + " as " + key + " };"));
            } else {
              statements.push(("var __export" + i + " = " + name + ";\nexport { __export" + i + " as " + key + " };"));
              i += 1;
            }
          });

          code += "\n" + (statements.join('\n'));
        }

        // TODO need a way to say 'sourcemap hasn't changed
        return {
          code: code,
          map: { mappings: '' }
        };
      }
      return null;
    }
  };
}

module.exports = legacy;
//# sourceMappingURL=index.js.map
