{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/admin/workspace/smart_contracts/uni-wallet/src/components/pages/Web3Status.tsx\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport React, { useMemo, useContext } from 'react';\nimport { Activity } from 'react-feather';\nimport styled, { css } from 'styled-components';\nimport { darken, lighten } from 'polished'; // TODO clean up assets\n\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../../connectors';\nimport { NetworkContextName } from '../../constants';\nimport useENSName from '../../hooks/useENSName';\nimport { useHasSocks } from '../../hooks/useSocksBalance'; // import { useWalletModalToggle } from '../../state/application/hooks'\n\nimport { isTransactionRecent, useAllTransactions } from '../../state/transactions/hooks';\nimport { shortenAddress } from '../../utils';\nimport { ButtonSecondary } from '../common/Button';\nimport { Identicon } from '../common/Identicon';\nimport { Loader } from '../common/Loader';\nimport { RowBetween } from '../common/Row'; // TODO\n\nimport { WalletModal } from '../WalletModal';\nimport { ApplicationActions } from '../../state/state.provider';\nconst IconWrapper = styled.div.withConfig({\n  displayName: \"Web3Status__IconWrapper\",\n  componentId: \"sc-11me9nn-0\"\n})([\"\", \";align-items:center;justify-content:center;& > *{height:\", \";width:\", \";}\"], ({\n  theme\n}) => theme.flexColumnNoWrap, ({\n  size\n}) => size ? size + 'px' : '32px', ({\n  size\n}) => size ? size + 'px' : '32px');\nconst Web3StatusGeneric = styled(ButtonSecondary).withConfig({\n  displayName: \"Web3Status__Web3StatusGeneric\",\n  componentId: \"sc-11me9nn-1\"\n})([\"\", \" width:100%;align-items:center;padding:0.5rem;border-radius:12px;cursor:pointer;user-select:none;:focus{outline:none;}\"], ({\n  theme\n}) => theme.flexRowNoWrap);\nconst Web3StatusError = styled(Web3StatusGeneric).withConfig({\n  displayName: \"Web3Status__Web3StatusError\",\n  componentId: \"sc-11me9nn-2\"\n})([\"background-color:\", \";border:1px solid \", \";color:\", \";font-weight:500;:hover,:focus{background-color:\", \";}\"], ({\n  theme\n}) => theme.red1, ({\n  theme\n}) => theme.red1, ({\n  theme\n}) => theme.white, ({\n  theme\n}) => darken(0.1, theme.red1));\nconst Web3StatusConnect = styled(Web3StatusGeneric).withConfig({\n  displayName: \"Web3Status__Web3StatusConnect\",\n  componentId: \"sc-11me9nn-3\"\n})([\"background-color:\", \";border:none;color:\", \";font-weight:500;:hover,:focus{border:1px solid \", \";color:\", \";}\", \"\"], ({\n  theme\n}) => theme.primary4, ({\n  theme\n}) => theme.primaryText1, ({\n  theme\n}) => darken(0.05, theme.primary4), ({\n  theme\n}) => theme.primaryText1, ({\n  faded\n}) => faded && css([\"background-color:\", \";border:1px solid \", \";color:\", \";:hover,:focus{border:1px solid \", \";color:\", \";}\"], ({\n  theme\n}) => theme.primary5, ({\n  theme\n}) => theme.primary5, ({\n  theme\n}) => theme.primaryText1, ({\n  theme\n}) => darken(0.05, theme.primary4), ({\n  theme\n}) => darken(0.05, theme.primaryText1)));\nconst Web3StatusConnected = styled(Web3StatusGeneric).withConfig({\n  displayName: \"Web3Status__Web3StatusConnected\",\n  componentId: \"sc-11me9nn-4\"\n})([\"background-color:\", \";border:1px solid \", \";color:\", \";font-weight:500;:hover,:focus{background-color:\", \";:focus{border:1px solid \", \";}}\"], ({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg2, ({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg3, ({\n  pending,\n  theme\n}) => pending ? theme.white : theme.text1, ({\n  pending,\n  theme\n}) => pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2), ({\n  pending,\n  theme\n}) => pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3));\nconst Text = styled.p.withConfig({\n  displayName: \"Web3Status__Text\",\n  componentId: \"sc-11me9nn-5\"\n})([\"flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;margin:0 0.5rem 0 0.25rem;font-size:1rem;width:fit-content;font-weight:500;\"]);\nconst NetworkIcon = styled(Activity).withConfig({\n  displayName: \"Web3Status__NetworkIcon\",\n  componentId: \"sc-11me9nn-6\"\n})([\"margin-left:0.25rem;margin-right:0.5rem;width:16px;height:16px;\"]); // we want the latest one to come first, so return negative if a is after b\n\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime;\n}\n\nconst SOCK = /*#__PURE__*/_jsxDEV(\"span\", {\n  role: \"img\",\n  \"aria-label\": \"has socks emoji\",\n  style: {\n    marginTop: -4,\n    marginBottom: -4\n  },\n  children: \"\\uD83E\\uDDE6\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 126,\n  columnNumber: 3\n}, this); // eslint-disable-next-line react/prop-types\n\n\nfunction StatusIcon({\n  connector\n}) {\n  if (connector === injected) {\n    return /*#__PURE__*/_jsxDEV(Identicon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  } else if (connector === walletconnect) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/walletConnectIcon.svg\",\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  } else if (connector === walletlink) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/images/coinbaseWalletIcon.svg\",\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  } else if (connector === fortmatic) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/fortmaticIcon.png\",\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  } else if (connector === portis) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/portisIcon.png\",\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\nfunction Web3StatusInner() {\n  const {\n    account,\n    connector,\n    error\n  } = useWeb3React();\n  const {\n    ENSName\n  } = useENSName(account !== null && account !== void 0 ? account : undefined);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const hasPendingTransactions = !!pending.length;\n  const hasSocks = useHasSocks();\n  const actions = useContext(ApplicationActions);\n\n  if (account) {\n    return /*#__PURE__*/_jsxDEV(Web3StatusConnected, {\n      id: \"web3-status-connected\",\n      onClick: actions.toggleModal,\n      pending: hasPendingTransactions,\n      children: [hasPendingTransactions ? /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [pending === null || pending === void 0 ? void 0 : pending.length, \" Pending\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Loader, {\n          stroke: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [hasSocks ? SOCK : null, /*#__PURE__*/_jsxDEV(Text, {\n          children: ENSName || shortenAddress(account)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !hasPendingTransactions && connector && /*#__PURE__*/_jsxDEV(StatusIcon, {\n        connector: connector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(Web3StatusError, {\n      onClick: actions.toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(NetworkIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Web3StatusConnect, {\n      id: \"connect-wallet\",\n      onClick: e => {\n        console.log('click');\n        console.log(actions);\n        actions.toggleModal();\n      },\n      faded: !account,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Connect to a wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n}\n\nexport function Web3Status() {\n  const {\n    active,\n    account\n  } = useWeb3React();\n  const contextNetwork = useWeb3React(NetworkContextName);\n  const {\n    ENSName\n  } = useENSName(account !== null && account !== void 0 ? account : undefined);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash);\n\n  if (!contextNetwork.active && !active) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Web3StatusInner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalletModal, {\n      ENSName: ENSName !== null && ENSName !== void 0 ? ENSName : undefined,\n      pendingTransactions: pending,\n      confirmedTransactions: confirmed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/admin/workspace/smart_contracts/uni-wallet/src/components/pages/Web3Status.tsx"],"names":["UnsupportedChainIdError","useWeb3React","React","useMemo","useContext","Activity","styled","css","darken","lighten","fortmatic","injected","portis","walletconnect","walletlink","NetworkContextName","useENSName","useHasSocks","isTransactionRecent","useAllTransactions","shortenAddress","ButtonSecondary","Identicon","Loader","RowBetween","WalletModal","ApplicationActions","IconWrapper","div","theme","flexColumnNoWrap","size","Web3StatusGeneric","flexRowNoWrap","Web3StatusError","red1","white","Web3StatusConnect","primary4","primaryText1","faded","primary5","Web3StatusConnected","pending","primary1","bg2","bg3","text1","Text","p","NetworkIcon","newTransactionsFirst","a","b","addedTime","SOCK","marginTop","marginBottom","StatusIcon","connector","Web3StatusInner","account","error","ENSName","undefined","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","tx","receipt","map","hash","hasPendingTransactions","length","hasSocks","actions","toggleModal","e","console","log","Web3Status","active","contextNetwork","confirmed"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport React, { useMemo, useContext } from 'react'\nimport { Activity } from 'react-feather'\nimport styled, { css } from 'styled-components'\nimport { darken, lighten } from 'polished'\n\n// TODO clean up assets\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../../connectors'\nimport { NetworkContextName } from '../../constants'\nimport useENSName from '../../hooks/useENSName'\nimport { useHasSocks } from '../../hooks/useSocksBalance'\n// import { useWalletModalToggle } from '../../state/application/hooks'\nimport { isTransactionRecent, useAllTransactions, TransactionDetails } from '../../state/transactions/hooks'\nimport { shortenAddress } from '../../utils'\nimport { ButtonSecondary } from '../common/Button'\n\nimport { Identicon } from '../common/Identicon'\nimport { Loader } from '../common/Loader'\n\nimport { RowBetween } from '../common/Row'\n// TODO\nimport { WalletModal } from '../WalletModal'\n\nimport { ApplicationActions } from '../../state/state.provider'\n\nconst IconWrapper = styled.div<{ size?: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n`\n\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n  color: ${({ theme }) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n`\n\nconst Web3StatusConnect = styled(Web3StatusGeneric)<{ faded?: boolean }>`\n  background-color: ${({ theme }) => theme.primary4};\n  border: none;\n  color: ${({ theme }) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n    color: ${({ theme }) => theme.primaryText1};\n  }\n\n  ${({ faded }) =>\n    faded &&\n    css`\n      background-color: ${({ theme }) => theme.primary5};\n      border: 1px solid ${({ theme }) => theme.primary5};\n      color: ${({ theme }) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n        color: ${({ theme }) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`\n\nconst Web3StatusConnected = styled(Web3StatusGeneric)<{ pending?: boolean }>`\n  background-color: ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg2)};\n  border: 1px solid ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg3)};\n  color: ${({ pending, theme }) => (pending ? theme.white : theme.text1)};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ pending, theme }) => (pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2))};\n\n    :focus {\n      border: 1px solid ${({ pending, theme }) => (pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3))};\n    }\n  }\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nconst SOCK = (\n  <span role=\"img\" aria-label=\"has socks emoji\" style={{ marginTop: -4, marginBottom: -4 }}>\n    🧦\n  </span>\n)\n\n// eslint-disable-next-line react/prop-types\nfunction StatusIcon({ connector }: { connector: AbstractConnector }) {\n  if (connector === injected) {\n    return <Identicon />\n  } else if (connector === walletconnect) {\n    return (\n      <IconWrapper size={16}>\n        <img src={\"/assets/images/walletConnectIcon.svg\"} alt={''} />\n      </IconWrapper>\n    )\n  } else if (connector === walletlink) {\n    return (\n      <IconWrapper size={16}>\n        <img src={\"assets/images/coinbaseWalletIcon.svg\"} alt={''} />\n      </IconWrapper>\n    )\n  } else if (connector === fortmatic) {\n    return (\n      <IconWrapper size={16}>\n        <img src={\"/assets/images/fortmaticIcon.png\"} alt={''} />\n      </IconWrapper>\n    )\n  } else if (connector === portis) {\n    return (\n      <IconWrapper size={16}>\n        <img src={\"/assets/images/portisIcon.png\"} alt={''} />\n      </IconWrapper>\n    )\n  }\n  return null\n}\n\nfunction Web3StatusInner() {\n  const { account, connector, error } = useWeb3React()\n\n  const { ENSName } = useENSName(account ?? undefined)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash)\n\n  const hasPendingTransactions = !!pending.length\n  const hasSocks = useHasSocks()\n  const actions = useContext(ApplicationActions)\n\n  if (account) {\n    return (\n      <Web3StatusConnected id=\"web3-status-connected\" onClick={actions.toggleModal} pending={hasPendingTransactions}>\n        {hasPendingTransactions ? (\n          <RowBetween>\n            <Text>{pending?.length} Pending</Text> <Loader stroke=\"white\" />\n          </RowBetween>\n        ) : (\n          <>\n            {hasSocks ? SOCK : null}\n            <Text>{ENSName || shortenAddress(account)}</Text>\n          </>\n        )}\n        {!hasPendingTransactions && connector && <StatusIcon connector={connector} />}\n      </Web3StatusConnected>\n    )\n  } else if (error) {\n    return (\n      <Web3StatusError onClick={actions.toggleModal}>\n        <NetworkIcon />\n        <Text>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error'}</Text>\n      </Web3StatusError>\n    )\n  } else {\n    return (\n      <Web3StatusConnect id=\"connect-wallet\" onClick={(e) => {\n        console.log('click') \n        console.log(actions)\n        actions.toggleModal()\n      }} faded={!account}>\n        <Text>Connect to a wallet</Text>\n      </Web3StatusConnect>\n    )\n  }\n}\n\nexport function Web3Status() {\n  const { active, account } = useWeb3React()\n  const contextNetwork = useWeb3React(NetworkContextName)\n\n  const { ENSName } = useENSName(account ?? undefined)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt).map((tx) => tx.hash)\n\n  if (!contextNetwork.active && !active) {\n    return null\n  }\n\n  return (\n    <>\n      <Web3StatusInner />\n      <WalletModal ENSName={ENSName ?? undefined} pendingTransactions={pending} confirmedTransactions={confirmed} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}