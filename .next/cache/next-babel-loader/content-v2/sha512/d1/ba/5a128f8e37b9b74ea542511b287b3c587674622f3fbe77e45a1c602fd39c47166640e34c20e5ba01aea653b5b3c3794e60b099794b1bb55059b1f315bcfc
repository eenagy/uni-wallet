{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/index.tsx\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport styled from 'styled-components';\nimport Close from '../../public/assets/images/x.svg';\nimport { fortmatic, injected, portis } from '../../connectors';\nimport { OVERLAY_READY } from '../../connectors/Fortmatic';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport usePrevious from '../../hooks/usePrevious';\nimport { ExternalLink } from '../../theme';\nimport { AccountDetails } from './AccountDetails';\nimport { ApplicationState, ApplicationActions } from '../../state/state.provider';\nimport { Modal } from '../common/Modal';\nimport { Option } from './Option';\nimport { PendingView } from './PendingView';\nconst CloseIcon = styled.div.withConfig({\n  displayName: \"WalletModal__CloseIcon\",\n  componentId: \"sc-2j6vnz-0\"\n})([\"position:absolute;right:1rem;top:14px;&:hover{cursor:pointer;opacity:0.6;}\"]); // @ts-ignore\n\nconst CloseColor = styled(Close).withConfig({\n  displayName: \"WalletModal__CloseColor\",\n  componentId: \"sc-2j6vnz-1\"\n})([\"path{stroke:\", \";}\"], ({\n  theme\n}) => theme.text4);\nconst Wrapper = styled.div.withConfig({\n  displayName: \"WalletModal__Wrapper\",\n  componentId: \"sc-2j6vnz-2\"\n})([\"\", \" margin:0;padding:0;width:100%;\"], ({\n  theme\n}) => theme.flexColumnNoWrap);\nconst HeaderRow = styled.div.withConfig({\n  displayName: \"WalletModal__HeaderRow\",\n  componentId: \"sc-2j6vnz-3\"\n})([\"\", \";padding:1rem 1rem;font-weight:500;color:\", \";\", \";\"], ({\n  theme\n}) => theme.flexRowNoWrap, props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : 'inherit', ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `);\nconst ContentWrapper = styled.div.withConfig({\n  displayName: \"WalletModal__ContentWrapper\",\n  componentId: \"sc-2j6vnz-4\"\n})([\"background-color:\", \";padding:2rem;border-bottom-left-radius:20px;border-bottom-right-radius:20px;\", \";\"], ({\n  theme\n}) => theme.bg2, ({\n  theme\n}) => theme.mediaWidth.upToMedium`padding: 1rem`);\nconst UpperSection = styled.div.withConfig({\n  displayName: \"WalletModal__UpperSection\",\n  componentId: \"sc-2j6vnz-5\"\n})([\"position:relative;h5{margin:0;margin-bottom:0.5rem;font-size:1rem;font-weight:400;}h5:last-child{margin-bottom:0px;}h4{margin-top:0;font-weight:500;}\"]);\nconst Blurb = styled.div.withConfig({\n  displayName: \"WalletModal__Blurb\",\n  componentId: \"sc-2j6vnz-6\"\n})([\"\", \" align-items:center;justify-content:center;flex-wrap:wrap;margin-top:2rem;\", \";\"], ({\n  theme\n}) => theme.flexRowNoWrap, ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `);\nconst OptionGrid = styled.div.withConfig({\n  displayName: \"WalletModal__OptionGrid\",\n  componentId: \"sc-2j6vnz-7\"\n})([\"display:grid;grid-gap:10px;\", \";\"], ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `);\nconst HoverText = styled.div.withConfig({\n  displayName: \"WalletModal__HoverText\",\n  componentId: \"sc-2j6vnz-8\"\n})([\":hover{cursor:pointer;}\"]);\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n};\nexport function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const {\n    active,\n    account,\n    connector,\n    activate,\n    error\n  } = useWeb3React();\n  const {\n    0: walletView,\n    1: setWalletView\n  } = useState(WALLET_VIEWS.ACCOUNT);\n  const {\n    0: pendingWallet,\n    1: setPendingWallet\n  } = useState();\n  const {\n    0: pendingError,\n    1: setPendingError\n  } = useState();\n  const {\n    modalOpen\n  } = useContext(ApplicationState);\n  const {\n    toggleModal\n  } = useContext(ApplicationActions);\n  const previousAccount = usePrevious(account); // close on connection, when logged out before\n\n  useEffect(() => {\n    if (account && !previousAccount && modalOpen) {\n      toggleModal();\n    }\n  }, [account, previousAccount, toggleModal, modalOpen]); // always reset to account view\n\n  useEffect(() => {\n    if (modalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [modalOpen]); // close modal when a connection is successful\n\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (modalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, modalOpen, activePrevious, connectorPrevious]);\n\n  const tryActivation = async connector => {\n    var _connector$walletConn, _connector$walletConn2;\n\n    let name = '';\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return name = SUPPORTED_WALLETS[key].name;\n      }\n\n      return true;\n    });\n    setPendingWallet(connector); // set wallet for pending view\n\n    setWalletView(WALLET_VIEWS.PENDING); // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n\n    if (connector instanceof WalletConnectConnector && (_connector$walletConn = connector.walletConnectProvider) !== null && _connector$walletConn !== void 0 && (_connector$walletConn2 = _connector$walletConn.wc) !== null && _connector$walletConn2 !== void 0 && _connector$walletConn2.uri) {\n      connector.walletConnectProvider = undefined;\n    }\n\n    connector && activate(connector, undefined, true).catch(error => {\n      if (error instanceof UnsupportedChainIdError) {\n        activate(connector); // a little janky...can't use setError because the connector isn't set\n      } else {\n        setPendingError(true);\n      }\n    });\n  }; // close wallet modal if fortmatic modal is active\n\n\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleModal();\n    });\n  }, [toggleModal]); // get wallets user can switch too, depending on device/browser\n\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]; // check for mobile options\n\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null;\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            onClick: () => {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: `connect-${key}`,\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: '/public/assets/images/' + option.iconName\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this);\n        }\n\n        return null;\n      } // overwrite injected when needed\n\n\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              id: `connect-${key}`,\n              color: '#E8831D',\n              header: 'Install Metamask',\n              subheader: null,\n              link: 'https://metamask.io/',\n              icon: \"/assets/images/metamask.png\"\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this);\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n            return null;\n          } // likewise for generic\n          else if (option.name === 'Injected' && isMetamask) {\n              return null;\n            }\n      } // return rest of options\n\n\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/_jsxDEV(Option, {\n        id: `connect-${key}`,\n        onClick: () => {\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: '/assets/images/' + option.iconName\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  function getModalContent() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(UpperSection, {\n        children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: toggleModal,\n          children: /*#__PURE__*/_jsxDEV(CloseColor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderRow, {\n          children: error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n          children: error instanceof UnsupportedChainIdError ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Please connect to the appropriate Ethereum network.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this) : 'Error connecting. Try refreshing the page.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/_jsxDEV(AccountDetails, {\n        toggleWalletModal: toggleModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: () => setWalletView(WALLET_VIEWS.OPTIONS)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UpperSection, {\n      children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: toggleModal,\n        children: /*#__PURE__*/_jsxDEV(CloseColor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/_jsxDEV(HeaderRow, {\n        color: \"blue\",\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          onClick: () => {\n            setPendingError(false);\n            setWalletView(WALLET_VIEWS.ACCOUNT);\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HeaderRow, {\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          children: \"Connect to a wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n        children: [walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/_jsxDEV(PendingView, {\n          connector: pendingWallet,\n          error: pendingError,\n          setPendingError: setPendingError,\n          tryActivation: tryActivation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(OptionGrid, {\n          children: getOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), walletView !== WALLET_VIEWS.PENDING && /*#__PURE__*/_jsxDEV(Blurb, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New to Ethereum? \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(ExternalLink, {\n            href: \"https://ethereum.org/wallets/\",\n            children: \"Learn more about wallets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modalOpen,\n    onDismiss: toggleModal,\n    minHeight: false,\n    maxHeight: 90,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: getModalContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","WalletConnectConnector","React","useEffect","useState","useContext","isMobile","styled","Close","fortmatic","injected","portis","OVERLAY_READY","SUPPORTED_WALLETS","usePrevious","ExternalLink","AccountDetails","ApplicationState","ApplicationActions","Modal","Option","PendingView","CloseIcon","div","CloseColor","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","UpperSection","Blurb","OptionGrid","HoverText","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","modalOpen","toggleModal","previousAccount","activePrevious","connectorPrevious","tryActivation","name","Object","keys","map","key","walletConnectProvider","wc","uri","undefined","catch","on","getOptions","isMetamask","window","ethereum","isMetaMask","option","web3","mobile","href","iconName","mobileOnly","getModalContent"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport React, { useEffect, useState, useContext } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport styled from 'styled-components'\nimport Close from '../../public/assets/images/x.svg'\nimport { fortmatic, injected, portis } from '../../connectors'\nimport { OVERLAY_READY } from '../../connectors/Fortmatic'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport usePrevious from '../../hooks/usePrevious'\nimport { ExternalLink } from '../../theme'\nimport { AccountDetails } from './AccountDetails'\nimport { ApplicationState, ApplicationActions } from '../../state/state.provider'\n\nimport { Modal } from '../common/Modal'\nimport { Option } from './Option'\nimport { PendingView } from './PendingView'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\n// @ts-ignore\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst Blurb = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n}\n\nexport function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const { modalOpen } = useContext(ApplicationState)\n  const { toggleModal } = useContext(ApplicationActions)\n\n  const previousAccount = usePrevious(account)\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && modalOpen) {\n      toggleModal()\n    }\n  }, [account, previousAccount, toggleModal, modalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (modalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [modalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (modalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, modalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && connector.walletConnectProvider?.wc?.uri) {\n      connector.walletConnectProvider = undefined\n    }\n\n    connector &&\n      activate(connector, undefined, true).catch((error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector) // a little janky...can't use setError because the connector isn't set\n        } else {\n          setPendingError(true)\n        }\n      })\n  }\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleModal()\n    })\n  }, [toggleModal])\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={'/public/assets/images/' + option.iconName}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={\"/assets/images/metamask.png\"}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={'/assets/images/' + option.iconName}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'}</HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>Please connect to the appropriate Ethereum network.</h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span>New to Ethereum? &nbsp;</span>{' '}\n              <ExternalLink href=\"https://ethereum.org/wallets/\">Learn more about wallets</ExternalLink>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={modalOpen} onDismiss={toggleModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}