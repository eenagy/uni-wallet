{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/Option.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ExternalLink } from '../../theme';\nimport Image from 'next/image';\nconst InfoCard = styled.button.withConfig({\n  displayName: \"Option__InfoCard\",\n  componentId: \"sc-11wl021-0\"\n})([\"background-color:\", \";padding:1rem;outline:none;border:1px solid;border-radius:12px;width:100% !important;&:focus{box-shadow:0 0 0 1px \", \";}border-color:\", \";\"], ({\n  theme,\n  active\n}) => active ? theme.bg3 : theme.bg2, ({\n  theme\n}) => theme.primary1, ({\n  theme,\n  active\n}) => active ? 'transparent' : theme.bg3);\nconst OptionCard = styled(InfoCard).withConfig({\n  displayName: \"Option__OptionCard\",\n  componentId: \"sc-11wl021-1\"\n})([\"display:flex;flex-direction:row;align-items:center;justify-content:space-between;margin-top:2rem;padding:1rem;\"]);\nconst OptionCardLeft = styled.div.withConfig({\n  displayName: \"Option__OptionCardLeft\",\n  componentId: \"sc-11wl021-2\"\n})([\"\", \";justify-content:center;height:100%;\"], ({\n  theme\n}) => theme.flexColumnNoWrap);\nconst OptionCardClickable = styled(OptionCard).withConfig({\n  displayName: \"Option__OptionCardClickable\",\n  componentId: \"sc-11wl021-3\"\n})([\"margin-top:0;&:hover{cursor:\", \";border:\", \";}opacity:\", \";\"], ({\n  clickable\n}) => clickable ? 'pointer' : '', ({\n  clickable,\n  theme\n}) => clickable ? `1px solid ${theme.primary1}` : ``, ({\n  disabled\n}) => disabled ? '0.5' : '1');\nconst GreenCircle = styled.div.withConfig({\n  displayName: \"Option__GreenCircle\",\n  componentId: \"sc-11wl021-4\"\n})([\"\", \" justify-content:center;align-items:center;&:first-child{height:8px;width:8px;margin-right:8px;background-color:\", \";border-radius:50%;}\"], ({\n  theme\n}) => theme.flexRowNoWrap, ({\n  theme\n}) => theme.green1);\nconst CircleWrapper = styled.div.withConfig({\n  displayName: \"Option__CircleWrapper\",\n  componentId: \"sc-11wl021-5\"\n})([\"color:\", \";display:flex;justify-content:center;align-items:center;\"], ({\n  theme\n}) => theme.green1);\nconst HeaderText = styled.div.withConfig({\n  displayName: \"Option__HeaderText\",\n  componentId: \"sc-11wl021-6\"\n})([\"\", \";color:\", \";font-size:1rem;font-weight:500;\"], ({\n  theme\n}) => theme.flexRowNoWrap, props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : ({\n  theme\n}) => theme.text1);\nconst SubHeader = styled.div.withConfig({\n  displayName: \"Option__SubHeader\",\n  componentId: \"sc-11wl021-7\"\n})([\"color:\", \";margin-top:10px;font-size:12px;\"], ({\n  theme\n}) => theme.text1);\nconst IconWrapper = styled.div.withConfig({\n  displayName: \"Option__IconWrapper\",\n  componentId: \"sc-11wl021-8\"\n})([\"\", \";align-items:center;justify-content:center;& > img,span{height:\", \";width:\", \";}\", \";\"], ({\n  theme\n}) => theme.flexColumnNoWrap, ({\n  size\n}) => size ? size + 'px' : '24px', ({\n  size\n}) => size ? size + 'px' : '24px', ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `);\nexport function Option({\n  link = null,\n  clickable = true,\n  size,\n  onClick = null,\n  color,\n  header,\n  subheader = null,\n  icon,\n  active = false,\n  id\n}) {\n  const content = /*#__PURE__*/_jsxDEV(OptionCardClickable, {\n    id: id,\n    onClick: onClick,\n    clickable: clickable && !active,\n    active: active,\n    children: [/*#__PURE__*/_jsxDEV(OptionCardLeft, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderText, {\n        color: color,\n        children: [active ? /*#__PURE__*/_jsxDEV(CircleWrapper, {\n          children: /*#__PURE__*/_jsxDEV(GreenCircle, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : '', header]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), subheader && /*#__PURE__*/_jsxDEV(SubHeader, {\n        children: subheader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: size,\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: icon,\n        alt: 'Icon'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n\n  if (link) {\n    return /*#__PURE__*/_jsxDEV(ExternalLink, {\n      href: link,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }, this);\n  }\n\n  return content;\n}","map":{"version":3,"sources":["/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/Option.tsx"],"names":["React","styled","ExternalLink","Image","InfoCard","button","theme","active","bg3","bg2","primary1","OptionCard","OptionCardLeft","div","flexColumnNoWrap","OptionCardClickable","clickable","disabled","GreenCircle","flexRowNoWrap","green1","CircleWrapper","HeaderText","props","color","text1","SubHeader","IconWrapper","size","mediaWidth","upToMedium","Option","link","onClick","header","subheader","icon","id","content"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ExternalLink } from '../../theme'\nimport Image from 'next/image'\n\nconst InfoCard = styled.button<{ active?: boolean }>`\n  background-color: ${({ theme, active }) => (active ? theme.bg3 : theme.bg2)};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.primary1};\n  }\n  border-color: ${({ theme, active }) => (active ? 'transparent' : theme.bg3)};\n`\n\nconst OptionCard = styled(InfoCard as any)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`\n\nconst OptionCardLeft = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  justify-content: center;\n  height: 100%;\n`\n\nconst OptionCardClickable = styled(OptionCard as any)<{ clickable?: boolean }>`\n  margin-top: 0;\n  &:hover {\n    cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n    border: ${({ clickable, theme }) => (clickable ? `1px solid ${theme.primary1}` : ``)};\n  }\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`\n\nconst GreenCircle = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${({ theme }) => theme.green1};\n    border-radius: 50%;\n  }\n`\n\nconst CircleWrapper = styled.div`\n  color: ${({ theme }) => theme.green1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst HeaderText = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : ({ theme }) => theme.text1)};\n  font-size: 1rem;\n  font-weight: 500;\n`\n\nconst SubHeader = styled.div`\n  color: ${({ theme }) => theme.text1};\n  margin-top: 10px;\n  font-size: 12px;\n`\n\nconst IconWrapper = styled.div<{ size?: number | null }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '24px')};\n    width: ${({ size }) => (size ? size + 'px' : '24px')};\n  }\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\n\nexport function Option({\n  link = null,\n  clickable = true,\n  size,\n  onClick = null,\n  color,\n  header,\n  subheader = null,\n  icon,\n  active = false,\n  id\n}: {\n  link?: string | null\n  clickable?: boolean\n  size?: number | null\n  onClick?: null | (() => void)\n  color: string\n  header: React.ReactNode\n  subheader: React.ReactNode | null\n  icon: string\n  active?: boolean\n  id: string\n}) {\n  const content = (\n    <OptionCardClickable id={id} onClick={onClick} clickable={clickable && !active} active={active}>\n      <OptionCardLeft>\n        <HeaderText color={color}>\n          {active ? (\n            <CircleWrapper>\n              <GreenCircle>\n                <div />\n              </GreenCircle>\n            </CircleWrapper>\n          ) : (\n            ''\n          )}\n          {header}\n        </HeaderText>\n        {subheader && <SubHeader>{subheader}</SubHeader>}\n      </OptionCardLeft>\n      <IconWrapper size={size}>\n        <Image src={icon} alt={'Icon'} />\n      </IconWrapper>\n    </OptionCardClickable>\n  )\n  if (link) {\n    return <ExternalLink href={link}>{content}</ExternalLink>\n  }\n\n  return content\n}\n"]},"metadata":{},"sourceType":"module"}