{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/admin/workspace/smart_contracts/uni-wallet/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/workspace/smart_contracts/uni-wallet/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/admin/workspace/smart_contracts/uni-wallet/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/index.tsx\",\n    _s = $RefreshSig$();\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    grid-template-columns: 1fr;\\n    grid-gap: 10px;\\n  \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: 1rem;\\n    font-size: 12px;\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"padding: 1rem\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: 1rem;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport styled from 'styled-components';\nimport Close from '../../../public/assets/images/x.svg';\nimport { fortmatic, injected, portis } from '../../connectors';\nimport { OVERLAY_READY } from '../../connectors/Fortmatic';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport usePrevious from '../../hooks/usePrevious';\nimport { ExternalLink } from '../../theme';\nimport { AccountDetails } from './AccountDetails';\nimport { ApplicationState, ApplicationActions } from '../../state/state.provider';\nimport { Modal } from '../common/Modal';\nimport { Option } from './Option';\nimport { PendingView } from './PendingView';\nvar CloseIcon = styled.div.withConfig({\n  displayName: \"WalletModal__CloseIcon\",\n  componentId: \"sc-2j6vnz-0\"\n})([\"position:absolute;right:1rem;top:14px;&:hover{cursor:pointer;opacity:0.6;}\"]); // @ts-ignore\n\n_c = CloseIcon;\nvar CloseColor = styled(Close).withConfig({\n  displayName: \"WalletModal__CloseColor\",\n  componentId: \"sc-2j6vnz-1\"\n})([\"path{stroke:\", \";}\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.text4;\n});\n_c2 = CloseColor;\nvar Wrapper = styled.div.withConfig({\n  displayName: \"WalletModal__Wrapper\",\n  componentId: \"sc-2j6vnz-2\"\n})([\"\", \" margin:0;padding:0;width:100%;\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.flexColumnNoWrap;\n});\n_c3 = Wrapper;\nvar HeaderRow = styled.div.withConfig({\n  displayName: \"WalletModal__HeaderRow\",\n  componentId: \"sc-2j6vnz-3\"\n})([\"\", \";padding:1rem 1rem;font-weight:500;color:\", \";\", \";\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.flexRowNoWrap;\n}, function (props) {\n  return props.color === 'blue' ? function (_ref4) {\n    var theme = _ref4.theme;\n    return theme.primary1;\n  } : 'inherit';\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.mediaWidth.upToMedium(_templateObject());\n});\n_c4 = HeaderRow;\nvar ContentWrapper = styled.div.withConfig({\n  displayName: \"WalletModal__ContentWrapper\",\n  componentId: \"sc-2j6vnz-4\"\n})([\"background-color:\", \";padding:2rem;border-bottom-left-radius:20px;border-bottom-right-radius:20px;\", \";\"], function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.bg2;\n}, function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.mediaWidth.upToMedium(_templateObject2());\n});\n_c5 = ContentWrapper;\nvar UpperSection = styled.div.withConfig({\n  displayName: \"WalletModal__UpperSection\",\n  componentId: \"sc-2j6vnz-5\"\n})([\"position:relative;h5{margin:0;margin-bottom:0.5rem;font-size:1rem;font-weight:400;}h5:last-child{margin-bottom:0px;}h4{margin-top:0;font-weight:500;}\"]);\n_c6 = UpperSection;\nvar Blurb = styled.div.withConfig({\n  displayName: \"WalletModal__Blurb\",\n  componentId: \"sc-2j6vnz-6\"\n})([\"\", \" align-items:center;justify-content:center;flex-wrap:wrap;margin-top:2rem;\", \";\"], function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.flexRowNoWrap;\n}, function (_ref9) {\n  var theme = _ref9.theme;\n  return theme.mediaWidth.upToMedium(_templateObject3());\n});\n_c7 = Blurb;\nvar OptionGrid = styled.div.withConfig({\n  displayName: \"WalletModal__OptionGrid\",\n  componentId: \"sc-2j6vnz-7\"\n})([\"display:grid;grid-gap:10px;\", \";\"], function (_ref10) {\n  var theme = _ref10.theme;\n  return theme.mediaWidth.upToMedium(_templateObject4());\n});\n_c8 = OptionGrid;\nvar HoverText = styled.div.withConfig({\n  displayName: \"WalletModal__HoverText\",\n  componentId: \"sc-2j6vnz-8\"\n})([\":hover{cursor:pointer;}\"]);\n_c9 = HoverText;\nvar WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n};\nexport function WalletModal(_ref11) {\n  _s();\n\n  var pendingTransactions = _ref11.pendingTransactions,\n      confirmedTransactions = _ref11.confirmedTransactions,\n      ENSName = _ref11.ENSName;\n\n  // important that these are destructed from the account-specific web3-react context\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account,\n      connector = _useWeb3React.connector,\n      activate = _useWeb3React.activate,\n      error = _useWeb3React.error;\n\n  var _useState = useState(WALLET_VIEWS.ACCOUNT),\n      walletView = _useState[0],\n      setWalletView = _useState[1];\n\n  var _useState2 = useState(),\n      pendingWallet = _useState2[0],\n      setPendingWallet = _useState2[1];\n\n  var _useState3 = useState(),\n      pendingError = _useState3[0],\n      setPendingError = _useState3[1];\n\n  var _useContext = useContext(ApplicationState),\n      modalOpen = _useContext.modalOpen;\n\n  var _useContext2 = useContext(ApplicationActions),\n      toggleModal = _useContext2.toggleModal;\n\n  var previousAccount = usePrevious(account); // close on connection, when logged out before\n\n  useEffect(function () {\n    if (account && !previousAccount && modalOpen) {\n      toggleModal();\n    }\n  }, [account, previousAccount, toggleModal, modalOpen]); // always reset to account view\n\n  useEffect(function () {\n    if (modalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [modalOpen]); // close modal when a connection is successful\n\n  var activePrevious = usePrevious(active);\n  var connectorPrevious = usePrevious(connector);\n  useEffect(function () {\n    if (modalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, modalOpen, activePrevious, connectorPrevious]);\n\n  var tryActivation = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(connector) {\n      var _connector$walletConn, _connector$walletConn2;\n\n      var name;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              name = '';\n              Object.keys(SUPPORTED_WALLETS).map(function (key) {\n                if (connector === SUPPORTED_WALLETS[key].connector) {\n                  return name = SUPPORTED_WALLETS[key].name;\n                }\n\n                return true;\n              });\n              setPendingWallet(connector); // set wallet for pending view\n\n              setWalletView(WALLET_VIEWS.PENDING); // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n\n              if (connector instanceof WalletConnectConnector && (_connector$walletConn = connector.walletConnectProvider) !== null && _connector$walletConn !== void 0 && (_connector$walletConn2 = _connector$walletConn.wc) !== null && _connector$walletConn2 !== void 0 && _connector$walletConn2.uri) {\n                connector.walletConnectProvider = undefined;\n              }\n\n              connector && activate(connector, undefined, true)[\"catch\"](function (error) {\n                if (error instanceof UnsupportedChainIdError) {\n                  activate(connector); // a little janky...can't use setError because the connector isn't set\n                } else {\n                  setPendingError(true);\n                }\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function tryActivation(_x) {\n      return _ref12.apply(this, arguments);\n    };\n  }(); // close wallet modal if fortmatic modal is active\n\n\n  useEffect(function () {\n    fortmatic.on(OVERLAY_READY, function () {\n      toggleModal();\n    });\n  }, [toggleModal]); // get wallets user can switch too, depending on device/browser\n\n  function getOptions() {\n    var _this = this;\n\n    var isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map(function (key) {\n      var option = SUPPORTED_WALLETS[key]; // check for mobile options\n\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null;\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            onClick: function onClick() {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: \"connect-\".concat(key),\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: '/public/assets/images/' + option.iconName\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, _this);\n        }\n\n        return null;\n      } // overwrite injected when needed\n\n\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              id: \"connect-\".concat(key),\n              color: '#E8831D',\n              header: 'Install Metamask',\n              subheader: null,\n              link: 'https://metamask.io/',\n              icon: \"/public/assets/images/metamask.png\"\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, _this);\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n            return null;\n          } // likewise for generic\n          else if (option.name === 'Injected' && isMetamask) {\n              return null;\n            }\n      } // return rest of options\n\n\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/_jsxDEV(Option, {\n        id: \"connect-\".concat(key),\n        onClick: function onClick() {\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: '/public/assets/images/' + option.iconName\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, _this);\n    });\n  }\n\n  function getModalContent() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(UpperSection, {\n        children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: toggleModal,\n          children: /*#__PURE__*/_jsxDEV(CloseColor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderRow, {\n          children: error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n          children: error instanceof UnsupportedChainIdError ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Please connect to the appropriate Ethereum network.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this) : 'Error connecting. Try refreshing the page.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/_jsxDEV(AccountDetails, {\n        toggleWalletModal: toggleModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: function openOptions() {\n          return setWalletView(WALLET_VIEWS.OPTIONS);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UpperSection, {\n      children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: toggleModal,\n        children: /*#__PURE__*/_jsxDEV(CloseColor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/_jsxDEV(HeaderRow, {\n        color: \"blue\",\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          onClick: function onClick() {\n            setPendingError(false);\n            setWalletView(WALLET_VIEWS.ACCOUNT);\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HeaderRow, {\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          children: \"Connect to a wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n        children: [walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/_jsxDEV(PendingView, {\n          connector: pendingWallet,\n          error: pendingError,\n          setPendingError: setPendingError,\n          tryActivation: tryActivation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(OptionGrid, {\n          children: getOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), walletView !== WALLET_VIEWS.PENDING && /*#__PURE__*/_jsxDEV(Blurb, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New to Ethereum? \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(ExternalLink, {\n            href: \"https://ethereum.org/wallets/\",\n            children: \"Learn more about wallets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modalOpen,\n    onDismiss: toggleModal,\n    minHeight: false,\n    maxHeight: 90,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: getModalContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletModal, \"IYkyKkAaVGhvPESdwqJnggAjI54=\", false, function () {\n  return [useWeb3React, usePrevious, usePrevious, usePrevious];\n});\n\n_c10 = WalletModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"CloseIcon\");\n$RefreshReg$(_c2, \"CloseColor\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"HeaderRow\");\n$RefreshReg$(_c5, \"ContentWrapper\");\n$RefreshReg$(_c6, \"UpperSection\");\n$RefreshReg$(_c7, \"Blurb\");\n$RefreshReg$(_c8, \"OptionGrid\");\n$RefreshReg$(_c9, \"HoverText\");\n$RefreshReg$(_c10, \"WalletModal\");","map":{"version":3,"sources":["/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","WalletConnectConnector","React","useEffect","useState","useContext","isMobile","styled","Close","fortmatic","injected","portis","OVERLAY_READY","SUPPORTED_WALLETS","usePrevious","ExternalLink","AccountDetails","ApplicationState","ApplicationActions","Modal","Option","PendingView","CloseIcon","div","CloseColor","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","UpperSection","Blurb","OptionGrid","HoverText","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","modalOpen","toggleModal","previousAccount","activePrevious","connectorPrevious","tryActivation","name","Object","keys","map","key","walletConnectProvider","wc","uri","undefined","on","getOptions","isMetamask","window","ethereum","isMetaMask","option","web3","mobile","href","iconName","mobileOnly","getModalContent"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport React, { useEffect, useState, useContext } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport styled from 'styled-components'\nimport Close from '../../../public/assets/images/x.svg'\nimport { fortmatic, injected, portis } from '../../connectors'\nimport { OVERLAY_READY } from '../../connectors/Fortmatic'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport usePrevious from '../../hooks/usePrevious'\nimport { ExternalLink } from '../../theme'\nimport { AccountDetails } from './AccountDetails'\nimport { ApplicationState, ApplicationActions } from '../../state/state.provider'\n\nimport { Modal } from '../common/Modal'\nimport { Option } from './Option'\nimport { PendingView } from './PendingView'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\n// @ts-ignore\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst Blurb = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n}\n\nexport function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const { modalOpen } = useContext(ApplicationState)\n  const { toggleModal } = useContext(ApplicationActions)\n\n  const previousAccount = usePrevious(account)\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && modalOpen) {\n      toggleModal()\n    }\n  }, [account, previousAccount, toggleModal, modalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (modalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [modalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (modalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, modalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && connector.walletConnectProvider?.wc?.uri) {\n      connector.walletConnectProvider = undefined\n    }\n\n    connector &&\n      activate(connector, undefined, true).catch((error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector) // a little janky...can't use setError because the connector isn't set\n        } else {\n          setPendingError(true)\n        }\n      })\n  }\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleModal()\n    })\n  }, [toggleModal])\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={'/public/assets/images/' + option.iconName}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={\"/public/assets/images/metamask.png\"}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={'/public/assets/images/' + option.iconName}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'}</HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>Please connect to the appropriate Ethereum network.</h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span>New to Ethereum? &nbsp;</span>{' '}\n              <ExternalLink href=\"https://ethereum.org/wallets/\">Learn more about wallets</ExternalLink>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={modalOpen} onDismiss={toggleModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}