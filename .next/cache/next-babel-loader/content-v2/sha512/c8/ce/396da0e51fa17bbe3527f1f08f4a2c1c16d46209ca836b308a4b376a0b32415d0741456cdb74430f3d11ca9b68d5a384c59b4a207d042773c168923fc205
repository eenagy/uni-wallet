{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/PendingView.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Option } from './Option';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport { injected } from '../../connectors';\nimport { darken } from 'polished';\nimport { Loader } from '../common/Loader';\nconst PendingSection = styled.div.withConfig({\n  displayName: \"PendingView__PendingSection\",\n  componentId: \"sc-1alarej-0\"\n})([\"\", \";align-items:center;justify-content:center;width:100%;& > *{width:100%;}\"], ({\n  theme\n}) => theme.flexColumnNoWrap);\nconst StyledLoader = styled(Loader).withConfig({\n  displayName: \"PendingView__StyledLoader\",\n  componentId: \"sc-1alarej-1\"\n})([\"margin-right:1rem;\"]);\nconst LoadingMessage = styled.div.withConfig({\n  displayName: \"PendingView__LoadingMessage\",\n  componentId: \"sc-1alarej-2\"\n})([\"\", \";align-items:center;justify-content:flex-start;border-radius:12px;margin-bottom:20px;color:\", \";border:1px solid \", \";& > *{padding:1rem;}\"], ({\n  theme\n}) => theme.flexRowNoWrap, ({\n  theme,\n  error\n}) => error ? theme.red1 : 'inherit', ({\n  theme,\n  error\n}) => error ? theme.red1 : theme.text4);\nconst ErrorGroup = styled.div.withConfig({\n  displayName: \"PendingView__ErrorGroup\",\n  componentId: \"sc-1alarej-3\"\n})([\"\", \";align-items:center;justify-content:flex-start;\"], ({\n  theme\n}) => theme.flexRowNoWrap);\nconst ErrorButton = styled.div.withConfig({\n  displayName: \"PendingView__ErrorButton\",\n  componentId: \"sc-1alarej-4\"\n})([\"border-radius:8px;font-size:12px;color:\", \";background-color:\", \";margin-left:1rem;padding:0.5rem;font-weight:600;user-select:none;&:hover{cursor:pointer;background-color:\", \";}\"], ({\n  theme\n}) => theme.text1, ({\n  theme\n}) => theme.bg4, ({\n  theme\n}) => darken(0.1, theme.text4));\nconst LoadingWrapper = styled.div.withConfig({\n  displayName: \"PendingView__LoadingWrapper\",\n  componentId: \"sc-1alarej-5\"\n})([\"\", \";align-items:center;justify-content:center;\"], ({\n  theme\n}) => theme.flexRowNoWrap);\nexport function PendingView({\n  connector,\n  error = false,\n  setPendingError,\n  tryActivation\n}) {\n  var _window, _window$ethereum;\n\n  // @ts-ignore\n  const isMetamask = (_window = window) === null || _window === void 0 ? void 0 : (_window$ethereum = _window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.isMetaMask;\n  return /*#__PURE__*/_jsxDEV(PendingSection, {\n    children: [/*#__PURE__*/_jsxDEV(LoadingMessage, {\n      error: error,\n      children: /*#__PURE__*/_jsxDEV(LoadingWrapper, {\n        children: error ? /*#__PURE__*/_jsxDEV(ErrorGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Error connecting.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorButton, {\n            onClick: () => {\n              setPendingError(false);\n              connector && tryActivation(connector);\n            },\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(StyledLoader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \"Initializing...\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key];\n\n      if (option.connector === connector) {\n        if (option.connector === injected) {\n          if (isMetamask && option.name !== 'MetaMask') {\n            return null;\n          }\n\n          if (!isMetamask && option.name === 'MetaMask') {\n            return null;\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(Option, {\n          id: `connect-${key}`,\n          clickable: false,\n          color: option.color,\n          header: option.name,\n          subheader: option.description,\n          icon: require('../../assets/images/' + option.iconName)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this);\n      }\n\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/admin/workspace/smart_contracts/uni-wallet/src/components/WalletModal/PendingView.tsx"],"names":["React","styled","Option","SUPPORTED_WALLETS","injected","darken","Loader","PendingSection","div","theme","flexColumnNoWrap","StyledLoader","LoadingMessage","flexRowNoWrap","error","red1","text4","ErrorGroup","ErrorButton","text1","bg4","LoadingWrapper","PendingView","connector","setPendingError","tryActivation","isMetamask","window","ethereum","isMetaMask","Object","keys","map","key","option","name","color","description","require","iconName"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Option } from './Option'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport { injected } from '../../connectors'\nimport { darken } from 'polished'\nimport { Loader } from '../common/Loader'\n\nconst PendingSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n`\n\nconst StyledLoader = styled(Loader)`\n  margin-right: 1rem;\n`\n\nconst LoadingMessage = styled.div<{ error?: boolean }>`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ${({ theme, error }) => (error ? theme.red1 : 'inherit')};\n  border: 1px solid ${({ theme, error }) => (error ? theme.red1 : theme.text4)};\n\n  & > * {\n    padding: 1rem;\n  }\n`\n\nconst ErrorGroup = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg4};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => darken(0.1, theme.text4)};\n  }\n`\n\nconst LoadingWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: center;\n`\n\nexport function PendingView({\n  connector,\n  error = false,\n  setPendingError,\n  tryActivation\n}: {\n  connector?: AbstractConnector\n  error?: boolean\n  setPendingError: (error: boolean) => void\n  tryActivation: (connector: AbstractConnector) => void\n}) {\n  // @ts-ignore\n  const isMetamask = window?.ethereum?.isMetaMask\n\n  return (\n    <PendingSection>\n      <LoadingMessage error={error}>\n        <LoadingWrapper>\n          {error ? (\n            <ErrorGroup>\n              <div>Error connecting.</div>\n              <ErrorButton\n                onClick={() => {\n                  setPendingError(false)\n                  connector && tryActivation(connector)\n                }}\n              >\n                Try Again\n              </ErrorButton>\n            </ErrorGroup>\n          ) : (\n            <>\n              <StyledLoader />\n              Initializing...\n            </>\n          )}\n        </LoadingWrapper>\n      </LoadingMessage>\n      {Object.keys(SUPPORTED_WALLETS).map(key => {\n        const option = SUPPORTED_WALLETS[key]\n        if (option.connector === connector) {\n          if (option.connector === injected) {\n            if (isMetamask && option.name !== 'MetaMask') {\n              return null\n            }\n            if (!isMetamask && option.name === 'MetaMask') {\n              return null\n            }\n          }\n          return (\n            <Option\n              id={`connect-${key}`}\n              key={key}\n              clickable={false}\n              color={option.color}\n              header={option.name}\n              subheader={option.description}\n              icon={require('../../assets/images/' + option.iconName)}\n            />\n          )\n        }\n        return null\n      })}\n    </PendingSection>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}